version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  test:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: docker build -t $DOCKER_USER/client-test -f ./client/Dockerfile.dev ./client
      - run: docker build -t $DOCKER_USER/api-test -f ./api/Dockerfile.dev ./api
      - run: docker run -e CI=true $DOCKER_USER/client-test npm run test
      - run: docker run -e CI=true $DOCKER_USER/api-test npm run test
  build:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: docker build -t $DOCKER_USER/client:$CIRCLE_BUILD_NUM ./client
      - run: docker build -t $DOCKER_USER/api:$CIRCLE_BUILD_NUM ./api
      - run: docker build -t $DOCKER_USER/client ./client
      - run: docker build -t $DOCKER_USER/api ./api
      - run: docker push $DOCKER_USER/client
      - run: docker push $DOCKER_USER/api
      - run: docker push $DOCKER_USER/client:$CIRCLE_BUILD_NUM
      - run: docker push $DOCKER_USER/api:$CIRCLE_BUILD_NUM
  deploy:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: $CLUSTER_NAME
          aws-region: $AWS_DEFAULT_REGION
          install-kubectl: true
      - kubernetes/update-container-image:
          container-image-updates: '$DOCKER_USER/api=$DOCKER_USER/api:$CIRCLE_BUILD_NUM'
          get-rollout-status: true
          record: true
          resource-name: deployment/api-deployment
          show-kubectl-command: true
      - kubernetes/update-container-image:
          container-image-updates: '$DOCKER_USER/client=$DOCKER_USER/client:$CIRCLE_BUILD_NUM'
          get-rollout-status: true
          record: true
          resource-name: deployment/client-deployment
          show-kubectl-command: true

workflows:
  deployment:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build